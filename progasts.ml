open Ast

let easy_p1_ast = [ Gfdecl (no_loc ({ rtyp = Some (no_loc (TInt)); name = no_loc ("f"); args = [  ]; body = [ no_loc (Ret (Some (no_loc (Const (no_loc (CInt 0L)))))) ] })) ]
let easy_p2_ast = [ Gfdecl (no_loc ({ rtyp = Some (no_loc (TInt)); name = no_loc ("f"); args = [ (no_loc (TInt),no_loc ("x")) ]; body = [ no_loc (Decl (no_loc ({ ty = no_loc (TInt); id = no_loc ("x"); init = no_loc (Const (no_loc (CInt 0L))) }))) ; no_loc (Assn ([ no_loc (Field (no_loc ("x"))) ],no_loc (Bop (IOr,no_loc (Bop (Shl,no_loc (Bop (Shr,no_loc (Bop (Sub,no_loc (Bop (Add,no_loc (Path ([ no_loc (Field (no_loc ("x"))) ])),no_loc (Path ([ no_loc (Field (no_loc ("x"))) ])))),no_loc (Bop (Mul,no_loc (Path ([ no_loc (Field (no_loc ("x"))) ])),no_loc (Path ([ no_loc (Field (no_loc ("x"))) ])))))),no_loc (Path ([ no_loc (Field (no_loc ("x"))) ])))),no_loc (Path ([ no_loc (Field (no_loc ("x"))) ])))),no_loc (Bop (IAnd,no_loc (Path ([ no_loc (Field (no_loc ("x"))) ])),no_loc (Bop (Sar,no_loc (Uop (Neg, no_loc (Uop (Bitnot, no_loc (Path ([ no_loc (Field (no_loc ("x"))) ])))))),no_loc (Path ([ no_loc (Field (no_loc ("x"))) ])))))))))) ; no_loc (Ret (Some (no_loc (Path ([ no_loc (Field (no_loc ("x"))) ]))))) ] })) ]
let easy_p3_ast = [ Gfdecl (no_loc ({ rtyp = Some (no_loc (TRef (no_loc (RString)))); name = no_loc ("bar"); args = [ (no_loc (TInt),no_loc ("x")) ; (no_loc (TRef (no_loc (RString))),no_loc ("y")) ]; body = [ no_loc (Decl (no_loc ({ ty = no_loc (TRef (no_loc (RString))); id = no_loc ("s"); init = no_loc (Const (no_loc (CStr "This is a string"))) }))) ; no_loc (Decl (no_loc ({ ty = no_loc (TRef (no_loc ((RArray (no_loc (TInt)))))); id = no_loc ("array"); init = no_loc (Const (no_loc (CArr [ no_loc (CInt 1L) ; no_loc (CInt 3L) ]))) }))) ; no_loc (Decl (no_loc ({ ty = no_loc (TInt); id = no_loc ("y"); init = no_loc (Path ([ no_loc (Field (no_loc ("array"))) ; no_loc (Index (no_loc (Const (no_loc (CInt 0L))))) ])) }))) ; no_loc (Ret (Some (no_loc (Path ([ no_loc (Field (no_loc ("s"))) ]))))) ] })) ; Gfdecl (no_loc ({ rtyp = None; name = no_loc ("proc1"); args = [  ]; body = [ no_loc (SCall ([ no_loc (Call (no_loc ("proc2"), [  ])) ])) ; no_loc (Ret (None)) ] })) ; Gfdecl (no_loc ({ rtyp = None; name = no_loc ("proc2"); args = [  ]; body = [ no_loc (SCall ([ no_loc (Call (no_loc ("proc1"), [  ])) ])) ; no_loc (Ret (None)) ] })) ; Gfdecl (no_loc ({ rtyp = Some (no_loc (TBool)); name = no_loc ("foo"); args = [ (no_loc (TInt),no_loc ("x")) ; (no_loc (TRef (no_loc ((RArray (no_loc (TInt)))))),no_loc ("y")) ]; body = [ no_loc (Decl (no_loc ({ ty = no_loc (TRef (no_loc (RString))); id = no_loc ("s"); init = no_loc (Path ([ no_loc (Call (no_loc ("bar"), [ no_loc (Path ([ no_loc (Field (no_loc ("x"))) ])) ; no_loc (Const (no_loc (CStr "cis341"))) ])) ])) }))) ; no_loc (SCall ([ no_loc (Call (no_loc ("proc1"), [  ])) ])) ; no_loc (Ret (Some (no_loc (Const (no_loc (CBool true)))))) ] })) ]
let easy_p4_ast = [ Gfdecl (no_loc ({ rtyp = Some (no_loc (TRef (no_loc (RString)))); name = no_loc ("f"); args = [  ]; body = [ no_loc (Decl (no_loc ({ ty = no_loc (TRef (no_loc ((RArray (no_loc (TRef (no_loc ((RArray (no_loc (TRef (no_loc (RString))))))))))))); id = no_loc ("s"); init = no_loc (Const (no_loc (CArr [ no_loc (CArr [ no_loc (CStr "s00:\n+\n=2*\n") ; no_loc (CStr "s01:this is not a comment in string.*") ; no_loc (CStr "s02:\"\\t\\n\\\\?\"") ]) ; no_loc (CArr [ no_loc (CStr "s10:\133\134") ; no_loc (CStr "s11") ; no_loc (CStr "s12") ]) ]))) }))) ; no_loc (Ret (Some (no_loc (Path ([ no_loc (Field (no_loc ("s"))) ; no_loc (Index (no_loc (Const (no_loc (CInt 0L))))) ; no_loc (Index (no_loc (Const (no_loc (CInt 1L))))) ]))))) ] })) ; Gfdecl (no_loc ({ rtyp = Some (no_loc (TRef (no_loc ((RArray (no_loc (TRef (no_loc ((RArray (no_loc (TInt)))))))))))); name = no_loc ("g"); args = [ (no_loc (TRef (no_loc ((RArray (no_loc (TRef (no_loc ((RArray (no_loc (TInt))))))))))),no_loc ("x")) ]; body = [ no_loc (Decl (no_loc ({ ty = no_loc (TRef (no_loc ((RArray (no_loc (TRef (no_loc ((RArray (no_loc (TInt))))))))))); id = no_loc ("y"); init = no_loc (Const (no_loc (CArr [ no_loc (CArr [ no_loc (CInt 0L) ; no_loc (CInt 1L) ]) ; no_loc (CArr [ no_loc (CInt 2L) ; no_loc (CInt 3L) ]) ]))) }))) ; no_loc (Decl (no_loc ({ ty = no_loc (TInt); id = no_loc ("i"); init = no_loc (Const (no_loc (CInt 0L))) }))) ; no_loc (Assn ([ no_loc (Field (no_loc ("x"))) ; no_loc (Index (no_loc (Const (no_loc (CInt 0L))))) ; no_loc (Index (no_loc (Const (no_loc (CInt 0L))))) ],no_loc (Bop (Add,no_loc (Path ([ no_loc (Field (no_loc ("i"))) ])),no_loc (Path ([ no_loc (Field (no_loc ("y"))) ; no_loc (Index (no_loc (Const (no_loc (CInt 1L))))) ; no_loc (Index (no_loc (Const (no_loc (CInt 1L))))) ])))))) ; no_loc (Assn ([ no_loc (Field (no_loc ("i"))) ],no_loc (Uop (Neg, no_loc (Uop (Lognot, no_loc (Uop (Bitnot, no_loc (Path ([ no_loc (Field (no_loc ("x"))) ; no_loc (Index (no_loc (Const (no_loc (CInt 0L))))) ; no_loc (Index (no_loc (Const (no_loc (CInt 0L))))) ])))))))))) ; no_loc (Ret (Some (no_loc (Path ([ no_loc (Field (no_loc ("x"))) ]))))) ] })) ]
let easy_p5_ast = [ Gvdecl (no_loc ({ ty = no_loc (TInt); id = no_loc ("i"); init = no_loc (Const (no_loc (CInt 19L))) })) ; Gvdecl (no_loc ({ ty = no_loc (TBool); id = no_loc ("b1"); init = no_loc (Const (no_loc (CBool true))) })) ; Gvdecl (no_loc ({ ty = no_loc (TBool); id = no_loc ("b2"); init = no_loc (Const (no_loc (CBool false))) })) ; Gvdecl (no_loc ({ ty = no_loc (TRef (no_loc (RString))); id = no_loc ("str"); init = no_loc (Const (no_loc (CStr "This is a string!"))) })) ; Gvdecl (no_loc ({ ty = no_loc (TRef (no_loc ((RArray (no_loc (TInt)))))); id = no_loc ("arr1"); init = no_loc (Const (no_loc (CArr [ no_loc (CInt 0L) ; no_loc (CInt 1L) ; no_loc (CInt 2L) ]))) })) ; Gvdecl (no_loc ({ ty = no_loc (TRef (no_loc ((RArray (no_loc (TRef (no_loc ((RArray (no_loc (TInt))))))))))); id = no_loc ("arr2"); init = no_loc (Const (no_loc (CArr [ no_loc (CArr [ no_loc (CInt 10L) ; no_loc (CInt 11L) ]) ; no_loc (CArr [ no_loc (CInt 20L) ; no_loc (CInt 21L) ]) ; no_loc (CArr [ no_loc (CInt 30L) ; no_loc (CInt 31L) ]) ]))) })) ; Gvdecl (no_loc ({ ty = no_loc (TRef (no_loc ((RArray (no_loc (TRef (no_loc (RString)))))))); id = no_loc ("arr3"); init = no_loc (Const (no_loc (CArr [ no_loc (CStr "String1") ; no_loc (CStr "String2") ; no_loc (CStr "String3") ]))) })) ; Gvdecl (no_loc ({ ty = no_loc (TRef (no_loc ((RArray (no_loc (TRef (no_loc ((RArray (no_loc (TRef (no_loc (RString))))))))))))); id = no_loc ("arr4"); init = no_loc (Const (no_loc (CArr [ no_loc (CArr [ no_loc (CStr "String00") ; no_loc (CStr "String01") ]) ; no_loc (CArr [ no_loc (CStr "String10") ; no_loc (CStr "String11") ]) ; no_loc (CArr [ no_loc (CStr "String20") ; no_loc (CStr "String21") ]) ]))) })) ]
let easy_p6_ast = [ Gvdecl (no_loc ({ ty = no_loc (TInt); id = no_loc ("y"); init = no_loc (Const (no_loc (CInt 0L))) })) ; Gvdecl (no_loc ({ ty = no_loc (TInt); id = no_loc ("z"); init = no_loc (Const (no_loc (CInt 0L))) })) ; Gfdecl (no_loc ({ rtyp = None; name = no_loc ("f"); args = [ (no_loc (TInt),no_loc ("x")) ; (no_loc (TInt),no_loc ("y")) ]; body = [ no_loc (Decl (no_loc ({ ty = no_loc (TInt); id = no_loc ("x"); init = no_loc (Const (no_loc (CInt 0L))) }))) ; no_loc (Ret (None)) ] })) ; Gfdecl (no_loc ({ rtyp = None; name = no_loc ("g"); args = [ (no_loc (TInt),no_loc ("x")) ; (no_loc (TInt),no_loc ("y")) ]; body = [ no_loc (Decl (no_loc ({ ty = no_loc (TInt); id = no_loc ("z"); init = no_loc (Const (no_loc (CInt 0L))) }))) ; no_loc (Ret (None)) ] })) ]
